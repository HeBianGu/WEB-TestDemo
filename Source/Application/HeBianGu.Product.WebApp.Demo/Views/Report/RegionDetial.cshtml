@model IEnumerable<HeBianGu.Product.Base.Model.jw_add_data>

@{
	ViewData["Title"] = "RegionDetial";
	Layout = "~/Views/Shared/_Start.cshtml";
}

<h1>区域数据统计变化表</h1>

<div style="padding: 30px; margin: 25px;border-radius:5px; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(189, 189, 189) 0px 0px 10px; background: #fff;">

	<!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->

	<div id="main" style="width: 100%;height:650px;text-align:center"><span style="margin:0 auto;line-height:50">I'm Ready.</span></div>
</div>

<!-- jQuery -->
<script src="../vendors/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap -->
<script src="../vendors/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- FastClick -->
<script src="../vendors/fastclick/lib/fastclick.js"></script>
<!-- NProgress -->
<script src="../vendors/nprogress/nprogress.js"></script>
<!-- ECharts -->
<script src="../vendors/echarts/dist/echarts.min.js"></script>
<script src="../vendors/echarts/map/js/world.js"></script>

<!-- Custom Theme Scripts -->
<script src="../build/js/custom.min.js"></script>

<script type="text/javascript">

	//查询事件

	//$("#btn_Search").click(function () {

	//	try {

	$.ajax({

		url: 'RegionDetial',

		data: { Test1: 2, Test2: 3 },

		type: "POST",

		dataType: "json",

		async: false,

		success: function (data) {

			//没有数据时提示
			if (data.hasOwnProperty("type")) {

				alert(data.message);
				return;
			}

			console.log(data);

			console.log(data.legend.data);

			console.log(data.xAxis.data);

			//console.log(data);
			//console.log(data.CategoryList);
			//console.log(data.legendList);
			//console.log(data.seriesList);

			//	注意都是小写
			//var series = JSON.parse(data.series.series);


			var theme = {
				color: [
					'#26B99A', '#34495E', '#BDC3C7', '#3498DB',
					'#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
				],

				title: {
					itemGap: 8,
					textStyle: {
						fontWeight: 'normal',
						color: '#408829'
					}
				},

				dataRange: {
					color: ['#1f610a', '#97b58d']
				},

				toolbox: {
					color: ['#408829', '#408829', '#408829', '#408829']
				},

				tooltip: {
					backgroundColor: 'rgba(0,0,0,0.5)',
					axisPointer: {
						type: 'line',
						lineStyle: {
							color: '#408829',
							type: 'dashed'
						},
						crossStyle: {
							color: '#408829'
						},
						shadowStyle: {
							color: 'rgba(200,200,200,0.3)'
						}
					}
				},

				dataZoom: {
					dataBackgroundColor: '#eee',
					fillerColor: 'rgba(64,136,41,0.2)',
					handleColor: '#408829'
				},
				grid: {
					borderWidth: 0
				},

				categoryAxis: {
					axisLine: {
						lineStyle: {
							color: '#408829'
						}
					},
					splitLine: {
						lineStyle: {
							color: ['#eee']
						}
					}
				},

				valueAxis: {
					axisLine: {
						lineStyle: {
							color: '#408829'
						}
					},
					splitArea: {
						show: true,
						areaStyle: {
							color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
						}
					},
					splitLine: {
						lineStyle: {
							color: ['#eee']
						}
					}
				},
				timeline: {
					lineStyle: {
						color: '#408829'
					},
					controlStyle: {
						normal: { color: '#408829' },
						emphasis: { color: '#408829' }
					}
				},

				k: {
					itemStyle: {
						normal: {
							color: '#68a54a',
							color0: '#a9cba2',
							lineStyle: {
								width: 1,
								color: '#408829',
								color0: '#86b379'
							}
						}
					}
				},
				map: {
					itemStyle: {
						normal: {
							areaStyle: {
								color: '#ddd'
							},
							label: {
								textStyle: {
									color: '#c12e34'
								}
							}
						},
						emphasis: {
							areaStyle: {
								color: '#99d2dd'
							},
							label: {
								textStyle: {
									color: '#c12e34'
								}
							}
						}
					}
				},
				force: {
					itemStyle: {
						normal: {
							linkStyle: {
								strokeColor: '#408829'
							}
						}
					}
				},
				chord: {
					padding: 4,
					itemStyle: {
						normal: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							},
							chordStyle: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								}
							}
						},
						emphasis: {
							lineStyle: {
								width: 1,
								color: 'rgba(128, 128, 128, 0.5)'
							},
							chordStyle: {
								lineStyle: {
									width: 1,
									color: 'rgba(128, 128, 128, 0.5)'
								}
							}
						}
					}
				},
				gauge: {
					startAngle: 225,
					endAngle: -45,
					axisLine: {
						show: true,
						lineStyle: {
							color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
							width: 8
						}
					},
					axisTick: {
						splitNumber: 10,
						length: 12,
						lineStyle: {
							color: 'auto'
						}
					},
					axisLabel: {
						textStyle: {
							color: 'auto'
						}
					},
					splitLine: {
						length: 18,
						lineStyle: {
							color: 'auto'
						}
					},
					pointer: {
						length: '90%',
						color: 'auto'
					},
					title: {
						textStyle: {
							color: '#333'
						}
					},
					detail: {
						textStyle: {
							color: 'auto'
						}
					}
				},
				textStyle: {
					fontFamily: 'Arial, Verdana, sans-serif'
				}
			};

			var echartBar = echarts.init(document.getElementById('main'), theme);

			echartBar.setOption({
				title: {
					text: '数据统计表',
					subtext: '到截止日期累计数据统计表'
				},
				tooltip: {
					trigger: 'axis'
				},
				legend: {
					//data: ['sales', 'purchases']
					data: data.legend.data
				},
				toolbox: {
					show: false
				},
				calculable: false,
				xAxis: [{
					type: 'category',
					//data: ['1?', '2?', '3?', '4?', '5?', '6?', '7?', '8?', '9?', '10?', '11?', '12?']
					data: data.xAxis.data
				}],
				yAxis: [{
					type: 'value'
				}],
				series: data.series
				//series: [{
				//	name: 'sales',
				//	type: 'bar',
				//	//data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],
				//	data: data.series.series1,
				//	markPoint: {
				//		data: [{
				//			type: 'max',
				//			name: '???'
				//		}, {
				//			type: 'min',
				//			name: '???'
				//		}]
				//	},
				//	markLine: {
				//		data: [{
				//			type: 'average',
				//			name: '???'
				//		}]
				//	}
				//}, {
				//	name: 'purchases',
				//	type: 'bar',
				//	//data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],
				//	data: data.series.series2,
				//	markPoint: {
				//		data: [{
				//			type: 'max',
				//			name: '???'
				//		}, {
				//			type: 'min',
				//			name: '???'
				//		}]
				//	},
				//	markLine: {
				//		data: [{
				//			type: 'average',
				//			name: '???'
				//		}]
				//	}
				//	//markPoint: {
				//	//	data: [{
				//	//		name: 'sales',
				//	//		value: 182.2,
				//	//		xAxis: 7,
				//	//		yAxis: 183,
				//	//	}, {
				//	//		name: 'purchases',
				//	//		value: 2.3,
				//	//		xAxis: 11,
				//	//		yAxis: 3
				//	//	}]
				//	//},
				//	//markLine: {
				//	//	data: [{
				//	//		type: 'average',
				//	//		name: '???'
				//	//	}]
				//	//}
				//}]
			});

			echartBar.hideLoading();

			//var myChart = echarts.init(document.getElementById('main'));

			//myChart.showLoading({

			//	text: '疯狂计算中',

			//	effect: 'whirling'

			//});

			//option = {

			//	title: {

			//		text: "Echarts在ASP.NET MVC下动态生成图表",

			//		subtext: "来自5653325的的博客"

			//	},

			//	tooltip: {

			//		trigger: 'axis'

			//	},

			//	legend: {
			//		data: data.legend.data
			//	},

			//	toolbox: {

			//		show: true,

			//		feature: {

			//			dataZoom: {

			//				yAxisIndex: 'none'

			//			},

			//			dataView: { readOnly: false },

			//			magicType: { type: ['line', 'bar'] },

			//			restore: {},

			//			saveAsImage: {}

			//		}

			//	},

			//	xAxis: {

			//		type: 'category',

			//		boundaryGap: false,

			//		data: data.xAxis.data

			//	},

			//	yAxis: {

			//		type: 'value',

			//		splitNumber: 10,

			//		axisLabel: {

			//			formatter: '{value} '

			//		}

			//	},

			//	series: series

			//};

			////给每个值设定相同的 显示最低、最高和平均值的线条

			//$(series).each(function (u) {

			//	this.markPoint = {

			//		data: [

			//			{ type: 'max', name: '最高成绩' },

			//			{ type: 'min', name: '最低成绩' }

			//		]

			//	};

			//	this.markLine = {

			//		data: [

			//			{ type: 'average', name: '平均值' },

			//			[{

			//				symbol: 'none',

			//				x: '93%',

			//				yAxis: 'max'

			//			}, {

			//				symbol: 'circle',

			//				label: {

			//					normal: {

			//						position: 'start',

			//						formatter: '最大值'

			//					}

			//				},

			//				type: 'max',

			//				name: '最高点'

			//			}]

			//		]

			//	};

			//});

			//myChart.setOption(option);

			//myChart.hideLoading();

		},

		error: function (XMLHttpRequest, textStatus, errorThrown) {

			//dialogMsg(errorThrown, -1);

			alert("异常");

		}

	});
</script>

